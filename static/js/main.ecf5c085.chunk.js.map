{"version":3,"sources":["components/navigation/Navigation.js","components/logo/Logo.js","components/imageLinkFrom/ImageLinkFrom.js","components/rank/Rank.js","components/particle/Particle.js","components/faceRecognition/FaceRecognition.js","components/signIn/SignIn.js","components/signUp/SignUp.js","App.js","serviceWorker.js","index.js","components/logo/Brain.svg"],"names":["Navigation","onRouteChange","isSignin","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","Brain","ImageLinkFrom","onInputChange","onButtonSubmit","type","onChange","Rank","particleConfig","particles","number","value","density","enable","value_area","Particle","params","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","htmlFor","name","SignUp","app","Clarifai","App","apiKey","setState","state","input","models","predict","FACE_DETECT_MODEL","then","response","displayFaceBox","calculateFaceLocation","catch","err","console","log","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","event","target","route","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.ecf5c085.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignin}) => {\r\n    if (isSignin) {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signin')} className='f4 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signin')} className='f4 link dim black underline pa3 pointer'>Sign In</p>\r\n                <p onClick={() => onRouteChange('register')} className='f4 link dim black underline pa3 pointer'>Sign Up</p>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport Brain from './Brain.svg';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner pa3\"><img style={{paddingTop: '5px'}} alt='logo' src={Brain}/></div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkFrom.css';\r\n\r\nconst ImageLinkFrom = ( {onInputChange, onButtonSubmit} ) =>{\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                {'This magic Brain will detect faces in your pictures. Git it a try.'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkFrom;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {'Andrei, your current rank is...'}\r\n            </div>\r\n            <div className='white f1'>\r\n                {'#5'}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport './Particle.css';\r\n\r\nconst particleConfig = {\r\n    particles: {\r\n        number: {\r\n            value: 30,\r\n            density:{\r\n                enable: true,\r\n                value_area: 800\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst Particle = () => {\r\n    return (\r\n        <Particles className='back' \r\n            params={{particleConfig}          \r\n        }/>\r\n    );\r\n}\r\n\r\nexport default Particle;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputImage' alt='' src={imageUrl} width='500px' height='auto' />\r\n                <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;\r\n","import React from 'react';\r\n\r\nconst SignIn = ({onRouteChange}) => {\r\n    return (\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <div>\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                        </div>\r\n                        <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\" /> Remember me</label>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                        <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                        <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst SignUp = ({onRouteChange}) => {\r\n    return (\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <div>\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign Up</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                        </div>\r\n                        <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\" /> Remember me</label>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                        <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React, {Component} from 'react';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport ImageLinkFrom from './components/imageLinkFrom/ImageLinkFrom';\nimport Rank from './components/rank/Rank';\nimport './App.css';\nimport Particle from './components/particle/Particle';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport SignIn from './components/signIn/SignIn';\nimport SignUp from './components/signUp/SignUp';\n\nconst app = new Clarifai.App({\n  apiKey: 'f3937a65c4b64e30a06d30199079b856'\n });\n\nclass App extends Component {\n  \n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignin: false\n    }\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n  }\n\n  calculateFaceLocation = (data) =>  {\n    console.log(data);\n    const clarifaiFace =  data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(clarifaiFace);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box}); \n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signin') {\n      this.setState({isSignin: false});\n    } else if (route === 'home') {\n      this.setState({isSignin: true})\n    }\n    this.setState({route: route});\n  }\n\n  render(){\n    const { isSignin, route, box, imageUrl } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Navigation isSignin={isSignin} onRouteChange={this.onRouteChange} />\n        <Particle />\n        { route === 'home' \n          ? <div>\n              <Logo />\n              <Rank />\n              <ImageLinkFrom onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n            route === 'signin'\n            ? <SignIn onRouteChange={this.onRouteChange}/>\n            : <SignUp onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Brain.014560c0.svg\";"],"sourceRoot":""}